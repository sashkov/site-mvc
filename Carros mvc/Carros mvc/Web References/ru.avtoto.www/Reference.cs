//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Carros_mvc.ru.avtoto.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AvtoTOServiceBinding", Namespace="http://www.avtoto.ru/")]
    public partial class AvtoTOService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SearchPartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchGetPartsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFromBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCountInBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAvailabilityInBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToOrdersFromBasketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrandsByCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AvtoTOService() {
            this.Url = global::Carros_mvc.Properties.Settings.Default.Carros_mvc_ru_avtoto_www_AvtoTOService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SearchPartsCompletedEventHandler SearchPartsCompleted;
        
        /// <remarks/>
        public event SearchStartCompletedEventHandler SearchStartCompleted;
        
        /// <remarks/>
        public event SearchGetPartsCompletedEventHandler SearchGetPartsCompleted;
        
        /// <remarks/>
        public event AddToBasketCompletedEventHandler AddToBasketCompleted;
        
        /// <remarks/>
        public event DeleteFromBasketCompletedEventHandler DeleteFromBasketCompleted;
        
        /// <remarks/>
        public event UpdateCountInBasketCompletedEventHandler UpdateCountInBasketCompleted;
        
        /// <remarks/>
        public event CheckAvailabilityInBasketCompletedEventHandler CheckAvailabilityInBasketCompleted;
        
        /// <remarks/>
        public event AddToOrdersFromBasketCompletedEventHandler AddToOrdersFromBasketCompleted;
        
        /// <remarks/>
        public event GetOrdersStatusCompletedEventHandler GetOrdersStatusCompleted;
        
        /// <remarks/>
        public event GetStatSearchCompletedEventHandler GetStatSearchCompleted;
        
        /// <remarks/>
        public event GetBrandsByCodeCompletedEventHandler GetBrandsByCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/SearchParts", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string SearchParts(string request) {
            object[] results = this.Invoke("SearchParts", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPartsAsync(string request) {
            this.SearchPartsAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchPartsAsync(string request, object userState) {
            if ((this.SearchPartsOperationCompleted == null)) {
                this.SearchPartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPartsOperationCompleted);
            }
            this.InvokeAsync("SearchParts", new object[] {
                        request}, this.SearchPartsOperationCompleted, userState);
        }
        
        private void OnSearchPartsOperationCompleted(object arg) {
            if ((this.SearchPartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPartsCompleted(this, new SearchPartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/SearchStart", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string SearchStart(string request) {
            object[] results = this.Invoke("SearchStart", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchStartAsync(string request) {
            this.SearchStartAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchStartAsync(string request, object userState) {
            if ((this.SearchStartOperationCompleted == null)) {
                this.SearchStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchStartOperationCompleted);
            }
            this.InvokeAsync("SearchStart", new object[] {
                        request}, this.SearchStartOperationCompleted, userState);
        }
        
        private void OnSearchStartOperationCompleted(object arg) {
            if ((this.SearchStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchStartCompleted(this, new SearchStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/SearchGetParts", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string SearchGetParts(string request) {
            object[] results = this.Invoke("SearchGetParts", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchGetPartsAsync(string request) {
            this.SearchGetPartsAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchGetPartsAsync(string request, object userState) {
            if ((this.SearchGetPartsOperationCompleted == null)) {
                this.SearchGetPartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchGetPartsOperationCompleted);
            }
            this.InvokeAsync("SearchGetParts", new object[] {
                        request}, this.SearchGetPartsOperationCompleted, userState);
        }
        
        private void OnSearchGetPartsOperationCompleted(object arg) {
            if ((this.SearchGetPartsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchGetPartsCompleted(this, new SearchGetPartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/AddToBasket", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string AddToBasket(string request) {
            object[] results = this.Invoke("AddToBasket", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToBasketAsync(string request) {
            this.AddToBasketAsync(request, null);
        }
        
        /// <remarks/>
        public void AddToBasketAsync(string request, object userState) {
            if ((this.AddToBasketOperationCompleted == null)) {
                this.AddToBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToBasketOperationCompleted);
            }
            this.InvokeAsync("AddToBasket", new object[] {
                        request}, this.AddToBasketOperationCompleted, userState);
        }
        
        private void OnAddToBasketOperationCompleted(object arg) {
            if ((this.AddToBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToBasketCompleted(this, new AddToBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/DeleteFromBasket", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string DeleteFromBasket(string request) {
            object[] results = this.Invoke("DeleteFromBasket", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFromBasketAsync(string request) {
            this.DeleteFromBasketAsync(request, null);
        }
        
        /// <remarks/>
        public void DeleteFromBasketAsync(string request, object userState) {
            if ((this.DeleteFromBasketOperationCompleted == null)) {
                this.DeleteFromBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFromBasketOperationCompleted);
            }
            this.InvokeAsync("DeleteFromBasket", new object[] {
                        request}, this.DeleteFromBasketOperationCompleted, userState);
        }
        
        private void OnDeleteFromBasketOperationCompleted(object arg) {
            if ((this.DeleteFromBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFromBasketCompleted(this, new DeleteFromBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/UpdateCountInBasket", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string UpdateCountInBasket(string request) {
            object[] results = this.Invoke("UpdateCountInBasket", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCountInBasketAsync(string request) {
            this.UpdateCountInBasketAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateCountInBasketAsync(string request, object userState) {
            if ((this.UpdateCountInBasketOperationCompleted == null)) {
                this.UpdateCountInBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCountInBasketOperationCompleted);
            }
            this.InvokeAsync("UpdateCountInBasket", new object[] {
                        request}, this.UpdateCountInBasketOperationCompleted, userState);
        }
        
        private void OnUpdateCountInBasketOperationCompleted(object arg) {
            if ((this.UpdateCountInBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCountInBasketCompleted(this, new UpdateCountInBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/CheckAvailabilityInBasket", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string CheckAvailabilityInBasket(string request) {
            object[] results = this.Invoke("CheckAvailabilityInBasket", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAvailabilityInBasketAsync(string request) {
            this.CheckAvailabilityInBasketAsync(request, null);
        }
        
        /// <remarks/>
        public void CheckAvailabilityInBasketAsync(string request, object userState) {
            if ((this.CheckAvailabilityInBasketOperationCompleted == null)) {
                this.CheckAvailabilityInBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAvailabilityInBasketOperationCompleted);
            }
            this.InvokeAsync("CheckAvailabilityInBasket", new object[] {
                        request}, this.CheckAvailabilityInBasketOperationCompleted, userState);
        }
        
        private void OnCheckAvailabilityInBasketOperationCompleted(object arg) {
            if ((this.CheckAvailabilityInBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAvailabilityInBasketCompleted(this, new CheckAvailabilityInBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/AddToOrdersFromBasket", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string AddToOrdersFromBasket(string request) {
            object[] results = this.Invoke("AddToOrdersFromBasket", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToOrdersFromBasketAsync(string request) {
            this.AddToOrdersFromBasketAsync(request, null);
        }
        
        /// <remarks/>
        public void AddToOrdersFromBasketAsync(string request, object userState) {
            if ((this.AddToOrdersFromBasketOperationCompleted == null)) {
                this.AddToOrdersFromBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToOrdersFromBasketOperationCompleted);
            }
            this.InvokeAsync("AddToOrdersFromBasket", new object[] {
                        request}, this.AddToOrdersFromBasketOperationCompleted, userState);
        }
        
        private void OnAddToOrdersFromBasketOperationCompleted(object arg) {
            if ((this.AddToOrdersFromBasketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToOrdersFromBasketCompleted(this, new AddToOrdersFromBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/GetOrdersStatus", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string GetOrdersStatus(string request) {
            object[] results = this.Invoke("GetOrdersStatus", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersStatusAsync(string request) {
            this.GetOrdersStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void GetOrdersStatusAsync(string request, object userState) {
            if ((this.GetOrdersStatusOperationCompleted == null)) {
                this.GetOrdersStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrdersStatus", new object[] {
                        request}, this.GetOrdersStatusOperationCompleted, userState);
        }
        
        private void OnGetOrdersStatusOperationCompleted(object arg) {
            if ((this.GetOrdersStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersStatusCompleted(this, new GetOrdersStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/GetStatSearch", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string GetStatSearch(string request) {
            object[] results = this.Invoke("GetStatSearch", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatSearchAsync(string request) {
            this.GetStatSearchAsync(request, null);
        }
        
        /// <remarks/>
        public void GetStatSearchAsync(string request, object userState) {
            if ((this.GetStatSearchOperationCompleted == null)) {
                this.GetStatSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatSearchOperationCompleted);
            }
            this.InvokeAsync("GetStatSearch", new object[] {
                        request}, this.GetStatSearchOperationCompleted, userState);
        }
        
        private void OnGetStatSearchOperationCompleted(object arg) {
            if ((this.GetStatSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatSearchCompleted(this, new GetStatSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("uri:avtoto/GetBrandsByCode", RequestNamespace="uri:avtoto", ResponseNamespace="uri:avtoto")]
        [return: System.Xml.Serialization.SoapElementAttribute("responce")]
        public string GetBrandsByCode(string request) {
            object[] results = this.Invoke("GetBrandsByCode", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrandsByCodeAsync(string request) {
            this.GetBrandsByCodeAsync(request, null);
        }
        
        /// <remarks/>
        public void GetBrandsByCodeAsync(string request, object userState) {
            if ((this.GetBrandsByCodeOperationCompleted == null)) {
                this.GetBrandsByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrandsByCodeOperationCompleted);
            }
            this.InvokeAsync("GetBrandsByCode", new object[] {
                        request}, this.GetBrandsByCodeOperationCompleted, userState);
        }
        
        private void OnGetBrandsByCodeOperationCompleted(object arg) {
            if ((this.GetBrandsByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrandsByCodeCompleted(this, new GetBrandsByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SearchPartsCompletedEventHandler(object sender, SearchPartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SearchStartCompletedEventHandler(object sender, SearchStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SearchGetPartsCompletedEventHandler(object sender, SearchGetPartsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchGetPartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchGetPartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void AddToBasketCompletedEventHandler(object sender, AddToBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void DeleteFromBasketCompletedEventHandler(object sender, DeleteFromBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFromBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFromBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void UpdateCountInBasketCompletedEventHandler(object sender, UpdateCountInBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCountInBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCountInBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CheckAvailabilityInBasketCompletedEventHandler(object sender, CheckAvailabilityInBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAvailabilityInBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAvailabilityInBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void AddToOrdersFromBasketCompletedEventHandler(object sender, AddToOrdersFromBasketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToOrdersFromBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToOrdersFromBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetOrdersStatusCompletedEventHandler(object sender, GetOrdersStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetStatSearchCompletedEventHandler(object sender, GetStatSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetBrandsByCodeCompletedEventHandler(object sender, GetBrandsByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrandsByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrandsByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591